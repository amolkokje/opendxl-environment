
# BUILD: docker build -t <image_name> <docker_file_location_folder>
#      example: docker run build -t a4 C:\docker
# RUN: docker run --entrypoint cloudcmd -p <localhost_port>:8000 -v <local_machine_folder>:/opendxl -t <image_name>
#      example: docker run --entrypoint cloudcmd -p 8888:8000 -v /c/docker/opendxl:/opendxl -t a4
# with this, you are also able write your code in the mounted local drive, and then run it in the docker container
# you can also connect using url: http://localhost:<localhost_port>. For the above example, it would be: http://localhost:8888


FROM centos:centos7
MAINTAINER The CentOS Project <cloud-ops@centos.org>

VOLUME ["/opendxl"]

# setup centos machine
RUN curl https://raw.githubusercontent.com/amolkokje/python_env_setup/master/centos_setup/centos_setup.sh > centos_env_setup.sh
RUN chmod 775 centos_env_setup.sh
RUN ./centos_env_setup.sh | tee -a "centos_env_setup.log"

# install dxl libs
RUN pip install dxlclient
RUN pip install dxlconsole
RUN pip install sphinx

# install cloud commander
RUN yum -y install epel-release
RUN yum -y install npm nodejs
RUN npm i cloudcmd -g
RUN npm i gritty

# copy files
COPY files/edit.json /usr/lib/node_modules/cloudcmd/node_modules/edward/json/

# set environment variables
ENV cloudcmd_contact false
ENV cloudcmd_console false
ENV cloudcmd_one_panel_mode true
ENV cloudcmd_terminal true
ENV cloudcmd_terminal_path gritty

# expose port for external connections
EXPOSE 8000


